name: APPMOVIL CI/CD Workflow  # Nombre del flujo de trabajo

# Configuración de los desencadenadores
on:
  push:
    branches:
      - pruebas
      - develop-luis
      - develop-mabel       
  pull_request:
    branches:
      - main
    
  workflow_dispatch:

# Permisos para GitHub Actions
permissions:
  contents: read

jobs:
  Pruebas:
    #name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar Node.js (para Angular y Jest)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # Versión de Node.js recomendada
          cache: 'npm'  # Configura el caché para npm automáticamente

      # 3. Instalar dependencias del proyecto
      - name: Install dependencies
        run: npm install

      # 4. Levantar la aplicación de Angular
      - name: Start Angular App
        run: npx ionic serve --port 8100 &
        env:
          CI: true

      # 5. Esperar a que el servidor esté arriba
      - name: Wait for Angular App to be available
        run: npx wait-on http://localhost:8100

      # 6. Ejecutar pruebas unitarias con Jasmin y Karma
      - name: Run unit test Jasmine karma tests
        run: npm test -- --no-watch --no-progress --browsers=ChromeHeadlessCI

      # 7. Ejecutar pruebas lint
      - name: Run lint test
        run: npm run lint

      # 8. Ejecutar pruebas e2e con cypress
      - name: e2e cypress
        run: npx cypress run 
    
  deploy:
        name: Deploy to Production
        runs-on: ubuntu-latest
        needs: Pruebas # Asegura que este job solo se ejecuta si 'Pruebas' ha sido exitoso
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/pruebas'
          # Asegura que solo se ejecute en la rama main
      
        steps:
            # 1. Checkout del repositorio
        - name: Checkout code
          uses: actions/checkout@v3
      
                # 2. Configurar Node.js
        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
             node-version: '20'
      # 2. Instalar dependencias
        - name: Install dependencies
          run: npm install

                # 4. Instalar Ionic CLI
        - name: Install Ionic CLI
          run: npm install -g @ionic/cli

      # 3. Construir la aplicación para producción
        - name: Build Ionic App
          run: ionic build --prod

      # 4. Desplegar en Vercel
        - name: Deploy to Production Vercel
          run: |
            echo "Desplegando aplicación a producción..."
            npx vercel --prod --yes --token ${{ secrets.TOKEN_VERCEL }} --cwd www
      


